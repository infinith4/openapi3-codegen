# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class ResponseMnemonicModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code=None, privatekey_wif=None, address=None, balance_satoshi=None):  # noqa: E501
        """ResponseMnemonicModel - a model defined in OpenAPI

        :param code: The code of this ResponseMnemonicModel.  # noqa: E501
        :type code: int
        :param privatekey_wif: The privatekey_wif of this ResponseMnemonicModel.  # noqa: E501
        :type privatekey_wif: str
        :param address: The address of this ResponseMnemonicModel.  # noqa: E501
        :type address: str
        :param balance_satoshi: The balance_satoshi of this ResponseMnemonicModel.  # noqa: E501
        :type balance_satoshi: int
        """
        self.openapi_types = {
            'code': int,
            'privatekey_wif': str,
            'address': str,
            'balance_satoshi': int
        }

        self.attribute_map = {
            'code': 'code',
            'privatekey_wif': 'privatekey_wif',
            'address': 'address',
            'balance_satoshi': 'balance_satoshi'
        }

        self._code = code
        self._privatekey_wif = privatekey_wif
        self._address = address
        self._balance_satoshi = balance_satoshi

    @classmethod
    def from_dict(cls, dikt) -> 'ResponseMnemonicModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ResponseMnemonicModel of this ResponseMnemonicModel.  # noqa: E501
        :rtype: ResponseMnemonicModel
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this ResponseMnemonicModel.


        :return: The code of this ResponseMnemonicModel.
        :rtype: int
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this ResponseMnemonicModel.


        :param code: The code of this ResponseMnemonicModel.
        :type code: int
        """

        self._code = code

    @property
    def privatekey_wif(self):
        """Gets the privatekey_wif of this ResponseMnemonicModel.


        :return: The privatekey_wif of this ResponseMnemonicModel.
        :rtype: str
        """
        return self._privatekey_wif

    @privatekey_wif.setter
    def privatekey_wif(self, privatekey_wif):
        """Sets the privatekey_wif of this ResponseMnemonicModel.


        :param privatekey_wif: The privatekey_wif of this ResponseMnemonicModel.
        :type privatekey_wif: str
        """

        self._privatekey_wif = privatekey_wif

    @property
    def address(self):
        """Gets the address of this ResponseMnemonicModel.


        :return: The address of this ResponseMnemonicModel.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this ResponseMnemonicModel.


        :param address: The address of this ResponseMnemonicModel.
        :type address: str
        """

        self._address = address

    @property
    def balance_satoshi(self):
        """Gets the balance_satoshi of this ResponseMnemonicModel.


        :return: The balance_satoshi of this ResponseMnemonicModel.
        :rtype: int
        """
        return self._balance_satoshi

    @balance_satoshi.setter
    def balance_satoshi(self, balance_satoshi):
        """Sets the balance_satoshi of this ResponseMnemonicModel.


        :param balance_satoshi: The balance_satoshi of this ResponseMnemonicModel.
        :type balance_satoshi: int
        """

        self._balance_satoshi = balance_satoshi
